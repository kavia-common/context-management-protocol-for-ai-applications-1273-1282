{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "Angular component for displaying and editing details of a context item, including its metadata, status, stats, and history.", "external_files": ["../../services/context.service", "../../services/context.store", "../../shared/status-badge/status-badge.component", "../../shared/loading/loading.component", "../../services/browser-globals.service", "@angular/core", "@angular/common", "@angular/forms"], "external_methods": ["ContextService.getContextHistory", "ContextService.updateContext", "ContextService.deleteContext", "ContextStore.selected$", "ContextStore.upsertLocal", "ContextStore.removeLocal", "BrowserGlobals.alert", "BrowserGlobals.confirm"], "published": ["ContextDetailComponent"], "classes": [{"name": "ContextDetailComponent", "description": "Angular component managing the display and editing of a specific context item's details and history."}], "methods": [{"name": "ngOnInit", "description": "Initializes the component, subscribes to selected context changes, populates form, and loads history."}, {"name": "ngOnDestroy", "description": "Cleans up subscriptions when the component is destroyed."}, {"name": "loadHistory", "description": "Fetches and sets the history of the selected context by ID."}, {"name": "save", "description": "Saves the current form data as an update to the context."}, {"name": "deleteContext", "description": "Deletes the selected context after user confirmation."}], "calls": ["this.api.getContextHistory", "this.api.updateContext", "this.api.deleteContext", "this.store.upsertLocal", "this.store.removeLocal", "this.globals.alert", "this.globals.confirm"], "search-terms": ["Angular context detail component", "context metadata editing", "context history Angular", "context status management", "Angular component for context", "context delete and save"], "state": 2, "file_id": 29, "knowledge_revision": 83, "git_revision": "", "revision_history": [{"59": ""}, {"83": ""}], "ctags": [{"_type": "tag", "name": "ContextDetailComponent", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^export class ContextDetailComponent implements OnInit, OnDestroy {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^    let meta: Record<string, any> | undefined;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^      metadata: meta$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^    const payload: UpdateContextRequest = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^      status: this.formStatus,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "store", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "pattern": "/^  private readonly store = inject(ContextStore);$/", "language": "TypeScript", "kind": "property", "scope": "ContextDetailComponent", "scopeKind": "class"}], "hash": "08469d36a9185ee35d0ecd1355054af2", "format-version": 4, "code-base-name": "model_context_protocol_frontend", "filename": "model_context_protocol_frontend/src/app/components/context-detail/context-detail.component.ts", "fields": [{"name": "let meta: Record<string, any> | undefined;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private readonly store = inject(ContextStore);", "scope": "ContextDetailComponent", "scopeKind": "class", "description": "unavailable"}]}