{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'BrowserGlobals' that provides SSR-safe wrappers for common browser global objects and functions, such as window, document, alert, confirm, and event handling. It helps in writing code that can run both on server and client by abstracting browser-specific globals.", "external_files": [], "external_methods": [], "published": ["BrowserGlobals"], "classes": [{"name": "BrowserGlobals", "description": "An Angular service providing SSR-safe access to browser globals, including methods to check if the environment is a browser, retrieve window/document objects, show alert/confirm dialogs, and handle DOM events."}], "methods": [{"name": "isBrowser(): boolean { isBrowser", "description": "Checks if the current environment is a browser by verifying the existence of 'window' and 'document' in globalThis.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "getWindow(): any | undefined { getWindow", "description": "Returns the global window object if available; otherwise undefined.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "getDocument(): any | undefined { getDocument", "description": "Returns the document object if available; otherwise undefined.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "alert(message: string): void { alert", "description": "Displays an alert dialog in the browser; logs to console on server environments.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "confirm(message: string): boolean { confirm", "description": "Displays a confirm dialog in the browser; returns false on server environments.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "dispatchEvent(name: string, detail?: any): void { dispatchEvent", "description": "Dispatches a DOM CustomEvent if in a browser environment.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "addDocumentEventListener(name: string, handler: any): void { addDocumentEventListener", "description": "Adds an event listener to the document if available.", "scope": "BrowserGlobals", "scopeKind": "class"}, {"name": "removeDocumentEventListener(name: string, handler: any): void { removeDocumentEventListener", "description": "Removes an event listener from the document if available.", "scope": "BrowserGlobals", "scopeKind": "class"}], "calls": ["win.alert", "win.confirm", "doc.dispatchEvent", "doc.addEventListener", "doc.removeEventListener"], "search-terms": ["SSR-safe", "browser globals", "window document", "Angular service", "browser environment detection"], "state": 2, "file_id": 32, "knowledge_revision": 84, "git_revision": "", "revision_history": [{"76": ""}, {"84": ""}], "ctags": [{"_type": "tag", "name": "BrowserGlobals", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^export class BrowserGlobals {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "addDocumentEventListener", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  addDocumentEventListener(name: string, handler: any): void {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "alert", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  alert(message: string): void {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "confirm", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  confirm(message: string): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "dispatchEvent", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  dispatchEvent(name: string, detail?: any): void {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "doc", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const doc: any = this.getDocument();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.addDocumentEventListener", "scopeKind": "method"}, {"_type": "tag", "name": "doc", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const doc: any = this.getDocument();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.dispatchEvent", "scopeKind": "method"}, {"_type": "tag", "name": "doc", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const doc: any = this.getDocument();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.removeDocumentEventListener", "scopeKind": "method"}, {"_type": "tag", "name": "evt", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const evt = new win.CustomEvent(name, { bubbles: true, detail });$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.dispatchEvent", "scopeKind": "method"}, {"_type": "tag", "name": "getDocument", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  getDocument(): any | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "getWindow", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  getWindow(): any | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "isBrowser", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  isBrowser(): boolean {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "removeDocumentEventListener", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^  removeDocumentEventListener(name: string, handler: any): void {$/", "language": "TypeScript", "kind": "method", "scope": "BrowserGlobals", "scopeKind": "class"}, {"_type": "tag", "name": "win", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const win: any = this.getWindow();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.alert", "scopeKind": "method"}, {"_type": "tag", "name": "win", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const win: any = this.getWindow();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.confirm", "scopeKind": "method"}, {"_type": "tag", "name": "win", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/browser-globals.service.ts", "pattern": "/^    const win: any = this.getWindow();$/", "language": "TypeScript", "kind": "constant", "scope": "BrowserGlobals.dispatchEvent", "scopeKind": "method"}], "hash": "60b3b88983b1f4371671766df93e3348", "format-version": 4, "code-base-name": "model_context_protocol_frontend", "filename": "model_context_protocol_frontend/src/app/services/browser-globals.service.ts"}