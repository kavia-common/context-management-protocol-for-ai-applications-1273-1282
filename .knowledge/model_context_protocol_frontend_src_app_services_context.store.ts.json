{"is_source_file": true, "format": "TypeScript", "description": "This file defines the ContextStore class, an Angular service that manages reactive state for context items using RxJS BehaviorSubjects. It handles loading, selecting, updating, and removing context data, serving as a central state management component within the application.", "external_files": ["./context.service"], "external_methods": ["ContextService.getContexts"], "published": ["ContextStore"], "classes": [{"name": "ContextStore", "description": "An Angular service for managing reactive state of context items, including load, select, upsert, and remove operations."}], "methods": [{"name": "all$", "description": "Returns an observable of all context items."}, {"name": "selected$", "description": "Returns an observable of the currently selected context item."}, {"name": "loadingState$", "description": "Returns an observable indicating whether contexts are currently being loaded."}, {"name": "errorState$", "description": "Returns an observable of any error message related to context loading."}, {"name": "load", "description": "Fetches context items from the backend API, updating internal state and handling loading/error status."}, {"name": "select", "description": "Sets the currently selected context by ID."}, {"name": "upsertLocal", "description": "Inserts or updates a context item in the local store."}, {"name": "removeLocal", "description": "Removes a context item from the local store by ID."}], "calls": ["this.api.getContexts"], "search-terms": ["ContextStore", "rxjs BehaviorSubject", "Angular reactive store", "context management", "context.service"], "state": 2, "file_id": 24, "knowledge_revision": 49, "git_revision": "", "ctags": [{"_type": "tag", "name": "ContextStore", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/context.store.ts", "pattern": "/^export class ContextStore {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "contexts$", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/context.store.ts", "pattern": "/^  private readonly contexts$ = new BehaviorSubject<ContextItem[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "ContextStore", "scopeKind": "class"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/context.store.ts", "pattern": "/^    const idx = list.findIndex((c) => c.id === item.id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/context-management-protocol-for-ai-applications-1273-1282/model_context_protocol_frontend/src/app/services/context.store.ts", "pattern": "/^    const list = this.contexts$.getValue();$/", "language": "TypeScript", "kind": "constant"}], "hash": "a5cdc6ebf9f970633592fcbf48902923", "format-version": 4, "code-base-name": "model_context_protocol_frontend", "filename": "model_context_protocol_frontend/src/app/services/context.store.ts", "fields": [{"name": "private readonly contexts$ = new BehaviorSubject<ContextItem[]>([]);", "scope": "ContextStore", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"49": ""}]}